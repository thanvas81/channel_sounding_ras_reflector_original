/*
 * Copyright (c) 2025 Nordic Semiconductor ASA
 *
 * SPDX-License-Identifier: LicenseRef-Nordic-5-Clause
 */

/ {
	cs_antenna_switch: cs-antenna-config {
		status = "okay";
		compatible = "nordic,bt-cs-antenna-switch";
		ant-gpios = <&gpio1 11 (GPIO_ACTIVE_HIGH)>,
			    <&gpio1 12 (GPIO_ACTIVE_HIGH)>,
			    <&gpio1 13 (GPIO_ACTIVE_HIGH)>,
			    <&gpio1 14 (GPIO_ACTIVE_HIGH)>;
		multiplexing-mode = <0>;
	};

	zephyr,user {
		io-channels = <&adc 0>;
	};
};

&i2c22 {
	status = "okay";
	clock-frequency = <250000>;
	pinctrl-0 = <&i2c22_default>;
	pinctrl-names = "default";
	bme280@76 {
		compatible = "bosch,bme280";
		reg = <0x76>;
	};
};

&pinctrl {
	i2c22_default: i2c22_default {
		group1 {
			psels = <NRF_PSEL(TWIM_SCL, 1, 13)>, <NRF_PSEL(TWIM_SDA, 1, 12)>;
		};
	};
};
/*
 * Copyright (c) 2025 Nordic Semiconductor ASA
 *
 * SPDX-License-Identifier: LicenseRef-Nordic-5-Clause
 */

/ {
	cs_antenna_switch: cs-antenna-config {
		status = "okay";
		compatible = "nordic,bt-cs-antenna-switch";
		ant-gpios = <&gpio1 11 (GPIO_ACTIVE_HIGH)>,
			    <&gpio1 12 (GPIO_ACTIVE_HIGH)>,
			    <&gpio1 13 (GPIO_ACTIVE_HIGH)>,
			    <&gpio1 14 (GPIO_ACTIVE_HIGH)>;
		multiplexing-mode = <0>;
	};

	zephyr,user {
		io-channels = <&adc 0>;
	};
};

&i2c22 {
	status = "okay";
	clock-frequency = <250000>;
	pinctrl-0 = <&i2c22_default>;
	pinctrl-names = "default";
	bme280@76 {
		compatible = "bosch,bme280";
		reg = <0x76>;
	};
};

&pinctrl {
	i2c22_default: i2c22_default {
		group1 {
			psels = <NRF_PSEL(TWIM_SCL, 1, 13)>, <NRF_PSEL(TWIM_SDA, 1, 12)>;
		};
	};
};

&adc {
    status = "okay";
    #address-cells = <1>;
    #size-cells = <0>;

    channel@0 {
        reg = <0>;
        zephyr,input-positive = <NRF_SAADC_AIN0>; /* P1.04 */
        zephyr,reference = "ADC_REF_INTERNAL";
        zephyr,gain = "ADC_GAIN_1_4";
        zephyr,acquisition-time = <ADC_ACQ_TIME(ADC_ACQ_TIME_MICROSECONDS, 20)>;
        zephyr,oversampling = <0>;
        /* zephyr,resolution is optional; you set it in the sequence */
    };
};
&uart20_default {
	group1 {
		psels = <NRF_PSEL(UART_TX, 1, 0)>, <NRF_PSEL(UART_RTS, 1, 6)>;
	};
};
